var mserve = require('frontEnd');
var qs = require('querystring');
var hp = require('htmlPage');
var myl = require('mysqlLink');
var url = require('url');

withChunkData = function(err,rows,fields,req,res)
{
	var page = new hp.page(res);
	var i;

	page.start();

	if (err || rows.length < 1)
	{
		page.write(JSON.stringify(err));
		page.end();
		return
	}

	page.write("<h3>" + rows[0].filename + ", Chunk:" + rows[0].chunk_num + "</h3>\n");

	page.write("<table>");
	for (i = 0; i < rows.length; i++)
	{
		page.write("<tr><td><div class='chunk_linenum'>");
		page.write(rows[i].line_num + "</td>");
		page.write("<td><div class='chunk_label'>");
		page.write(rows[i].label + "</td>");
		if (rows[i].inst != "")
		{
			page.write("<td><div class='chunk_inst'>");
			page.write(rows[i].inst + "</td>");
		}
		else
		{
			page.write("<td><div class='chunk_direct'>");
			page.write("." + rows[i].direct + "</td>");
		}
		page.write("<td><div class='chunk_comment'>");
		page.write(rows[i].comment + "</td></tr>\n");
	}
	page.write("</table>");
	
	page.end();
}

singleChunk = function(req,res)
{
	var filename = url.parse(req.url, true).query['file'];
	var chunk_id = url.parse(req.url, true).query['chunk'];

	myl.getChunkByID(filename, chunk_id, function(err, rows,fields) { withChunkData(err,rows,fields,req,res); });
}

withList = function(err, rows, fields, req, res)
{
	var page = new hp.page(res);
	var lastfile = "";
	page.start();

	for (i = 0; i < rows.length; i++)
	{
		if (rows[i].filename != lastfile)
		{
			lastfile = rows[i].filename;
			page.write("<h3>" +  lastfile + "</h3>\n");
		}
		page.write("<a href='/viewchunk?file=" + lastfile + "&chunk=" +rows[i].chunk_num + "'>" + rows[i].chunk_num + "</a> ");
		page.write(rows[i].direct + "<br/>\n");
	}
	
	page.end();
}

chunkList = function(req,res)
{
	myl.getChunks(function(err,rows,fields) { withList(err,rows,fields,req,res); });
}

start = function(req,res)
{
	var filename = url.parse(req.url, true).query['file'];
	var chunk_id = url.parse(req.url, true).query['chunk'];

	if (filename && chunk_id)
	{
		singleChunk(req,res);
	}
	else
	{
		chunkList(req,res);
	}
}

module.exports.start = start;
