var mysql = require('mysql');

var server = "127.0.0.1";
var user = "gas";
var password = "gas";
var database = "gasview";

const add_file_name_table = "CREATE TABLE files ( "
	+"file_id	INTEGER PRIMARY KEY AUTO_INCREMENT, "
	+"filename	VARCHAR(45) UNIQUE, "
	+"created	TIMESTAMP DEFAULT CURRENT_TIMESTAMP"
	+")";

const add_opcode_table = "CREATE TABLE opcodes ( "
	+"code		VARCHAR(10) PRIMARY KEY, "
	+"created	TIMESTAMP DEFAULT CURRENT_TIMESTAMP "
	+") ";

const add_instrow_table = "CREATE TABLE instrow ( "
	+"file_id	INTEGER NOT NULL, "
	+"line_num	INTEGER NOT NULL, "
	+"chunk_num	INTEGER NOT NULL, "
	+"label		VARCHAR(200), "
	+"inst		VARCHAR(200), "
	+"direct	VARCHAR(200), "
	+"comment	VARCHAR(200), "
	+"opcode	VARCHAR(10) NOT NULL, "
	+"created	TIMESTAMP DEFAULT CURRENT_TIMESTAMP, "
	+"CONSTRAINT irf1	FOREIGN KEY instrow(file_id) REFERENCES files(file_id), "
	+"CONSTRAINT irf2	FOREIGN KEY instrow(opcode) REFERENCES opcodes(code) "
	+") ";

const add_instrow_index = "CREATE UNIQUE INDEX idx_instrow ON instrow (file_id, line_num)"

const drop_instrow_index = "DROP INDEX idx_instrow ON instrow";

const drop_file_name_table = "DROP TABLE files";
const drop_opcode_table = "DROP TABLE opcodes";
const drop_instrow_table = "DROP TABLE instrow";


genericMySQLReturn = function(err,rows,fields)
{
	if (err)
	{
		console.log(JSON.stringify(err));
		console.log(JSON.stringify(rows));
		console.log(JSON.stringify(fields));
	}
}

addTables = function()
{
	var connection = mysql.createConnection({host: server, user: user, password: password, database:database});

	connection.query(drop_instrow_index, genericMySQLReturn);
	connection.query(drop_instrow_table, genericMySQLReturn);
	connection.query(drop_file_name_table, genericMySQLReturn);
	connection.query(drop_opcode_table, genericMySQLReturn);
	
	connection.query(add_file_name_table, genericMySQLReturn);
	connection.query(add_opcode_table, genericMySQLReturn);
	connection.query(add_instrow_table, genericMySQLReturn);
	connection.query(add_instrow_index, genericMySQLReturn);

	connection.end();
}

addFile = function(filename)
{
	var connection = mysql.createConnection({host: server, user: user, password: password, database:database});

	connection.query("INSERT IGNORE INTO files(filename) VALUES ('" + filename + "')", genericMySQLReturn);

	connection.end();
}

addOpCode = function(opcode)
{
	var connection = mysql.createConnection({host: server, user: user, password: password, database:database});

	connection.query("INSERT IGNORE INTO opcodes(code) VALUES ('" + opcode + "')", genericMySQLReturn);

	connection.end();
}

getFileNum = function(filename, inst, callback)
{
	var connection = mysql.createConnection({host: server, user: user, password: password, database:database});

	connection.query("SELECT file_id FROM files WHERE filename LIKE '" + filename + "' ", function(err, rows, fields) { callback(err, rows, fields, inst); });

	connection.end();
}

makeInstRowInsertion = function(filenum, row, data)
{

	return "INSERT IGNORE INTO instrow (file_id, line_num, chunk_num, label, inst, direct, comment, opcode) VALUES (" 
			+ filenum + ", "
			+ row + ", "
			+ data.chunk + ", "
			+ "'" + data.label + "', "
			+ "'" + data.inst + "', "
			+ "'" + data.direct + "', "
			+ "'" + data.comment + "', "
			+ "'" + data.opcode + "'"
			+ ")";
}

addInstRows = function(filenum, inst)
{
	var connection = mysql.createConnection({host: server, user: user, password: password, database:database});
	var i = 0;
	var stmt;

	for (i = 0; i < inst.length; i++)
	{
		stmt = makeInstRowInsertion(filenum, i, inst[i]);
		console.log(stmt);
		connection.query(stmt, genericMySQLReturn);
	}
	connection.end();
}

getChunks = function(callback)
{
	var connection = mysql.createConnection({host: server, user: user, password: password, database:database});

	connection.query("SELECT filename, chunk_num, direct FROM files, instrow"
		+" WHERE files.file_id=instrow.file_id "
		+" AND direct LIKE 'glob%' ", 
		callback);

	connection.end();
}

getChunkByID = function(filename, id, callback)
{
	var connection = mysql.createConnection({host: server, user: user, password: password, database:database});

	connection.query( "SELECT filename, line_num, label, inst, direct, comment, chunk_num FROM files, instrow"
		+" WHERE files.file_id=instrow.file_id "
		+" AND filename LIKE '" + filename + "'"
		+" AND chunk_num=" + id,
		callback);

	connection.end();
}

module.exports.getChunkByID = getChunkByID;
module.exports.getChunks = getChunks;
module.exports.getFileNum = getFileNum;
module.exports.addFile = addFile;
module.exports.addOpCode = addOpCode;
module.exports.addTables = addTables;
module.exports.addInstRows = addInstRows;
